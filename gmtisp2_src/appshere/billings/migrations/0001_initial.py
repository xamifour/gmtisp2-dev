# Generated by Django 5.1.4 on 2024-12-21 16:58

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Limitation',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mikrotik_id', models.CharField(blank=True, max_length=67, null=True, unique=True)),
                ('name', models.CharField(blank=True, help_text='limit-1gb', max_length=67, null=True, unique=True)),
                ('download_limit', models.CharField(default='0', max_length=67)),
                ('upload_limit', models.CharField(default='0', max_length=67)),
                ('transfer_limit', models.CharField(default='0', help_text='100M (100 MB), 10G (10 GB)', max_length=67)),
                ('uptime_limit', models.CharField(default='30d', help_text='30m (30 minutes), 45d (45 days), 0 (no expiration)', max_length=20)),
                ('rate_limit_rx', models.CharField(default='0', max_length=67)),
                ('rate_limit_tx', models.CharField(default='0', max_length=67)),
                ('rate_limit_min_rx', models.CharField(default='0', max_length=67)),
                ('rate_limit_min_tx', models.CharField(default='0', max_length=67)),
                ('rate_limit_priority', models.CharField(default='0', max_length=67)),
                ('rate_limit_burst_rx', models.CharField(default='0', max_length=67)),
                ('rate_limit_burst_tx', models.CharField(default='0', max_length=67)),
                ('rate_limit_burst_threshold_rx', models.CharField(default='0', max_length=67)),
                ('rate_limit_burst_threshold_tx', models.CharField(default='0', max_length=67)),
                ('rate_limit_burst_time_rx', models.CharField(default='00:00:00', max_length=67)),
                ('rate_limit_burst_time_tx', models.CharField(default='00:00:00', max_length=67)),
                ('reset_counters_start_time', models.CharField(blank=True, max_length=20, null=True)),
                ('reset_counters_interval', models.CharField(choices=[('disabled', 'Disabled'), ('monthly', 'Monthly'), ('weekly', 'Weekly'), ('daily', 'Daily'), ('hourly', 'Hourly')], default='disabled', max_length=67)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='limit_org', to='accounts.organization')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mikrotik_id', models.CharField(blank=True, max_length=67, null=True, unique=True)),
                ('name', models.CharField(max_length=67, unique=True, verbose_name='name')),
                ('name_for_users', models.CharField(blank=True, help_text='Friendly name for user, e.g., Plan-100MB', max_length=67, null=True, verbose_name='name for users')),
                ('price', models.CharField(default='0.00', max_length=10, verbose_name='price')),
                ('validity', models.CharField(default='30d', help_text='30m (30 minutes), 45d (45 days), 15d 00:45:00 (15 days, 0 hours, 45 minutes, and 0 seconds, 0 (no expiration)', max_length=20, verbose_name='validity')),
                ('starts_when', models.CharField(choices=[('assigned', 'Assigned'), ('first-auth', 'First authentication')], default='first-auth', max_length=67, verbose_name='starts when')),
                ('override_shared_users', models.CharField(default='off', max_length=67, verbose_name='override shared users')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile_org', to='accounts.organization')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='ProfileLimitation',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mikrotik_id', models.CharField(blank=True, max_length=67, null=True, unique=True)),
                ('from_time', models.CharField(default='00:00:00', max_length=10)),
                ('till_time', models.CharField(default='23:59:59', max_length=10)),
                ('weekdays', models.CharField(blank=True, max_length=67, null=True)),
                ('limitation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billings.limitation')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prof_limit_org', to='accounts.organization')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='billings.profile')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mikrotik_id', models.CharField(blank=True, max_length=67, null=True, unique=True)),
                ('session_id', models.CharField(max_length=67, unique=True, verbose_name='Session ID')),
                ('nas_ip_address', models.CharField(blank=True, max_length=45, null=True, verbose_name='NAS IP Address')),
                ('nas_port_id', models.CharField(max_length=67, verbose_name='NAS Port ID')),
                ('nas_port_type', models.CharField(max_length=67, verbose_name='NAS Port Type')),
                ('calling_station_id', models.CharField(max_length=67, verbose_name='Calling Station ID')),
                ('user_address', models.CharField(max_length=45, verbose_name='User Address')),
                ('download', models.CharField(max_length=20, verbose_name='Download')),
                ('upload', models.CharField(max_length=20, verbose_name='Upload')),
                ('uptime', models.CharField(max_length=20, verbose_name='Uptime')),
                ('status', models.CharField(max_length=67, verbose_name='Status')),
                ('started', models.CharField(blank=True, max_length=20, null=True, verbose_name='Started')),
                ('ended', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ended')),
                ('last_accounting_packet', models.CharField(blank=True, max_length=20, null=True, verbose_name='Last Accounting Packet')),
                ('terminate_cause', models.CharField(blank=True, max_length=67, null=True, verbose_name='Terminate Cause')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session_org', to='accounts.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mikrotik_id', models.CharField(blank=True, max_length=67, null=True, unique=True)),
                ('state', models.CharField(blank=True, max_length=67, null=True, verbose_name='state')),
                ('end_time', models.CharField(blank=True, max_length=20, null=True, verbose_name='end time')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userprofile_org', to='accounts.organization')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billings.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mikrotik_id', models.CharField(blank=True, max_length=67, null=True, unique=True)),
                ('copy_from', models.CharField(choices=[('manual', 'Manual'), ('auto', 'Auto')], default='manual', max_length=67)),
                ('method', models.CharField(choices=[('ONLINE', 'Online'), ('OFFLINE', 'Offline')], default='OFFLINE', max_length=67)),
                ('trans_start', models.CharField(blank=True, max_length=20, null=True)),
                ('trans_end', models.CharField(blank=True, max_length=20, null=True, verbose_name='Date')),
                ('trans_status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], max_length=67)),
                ('user_message', models.TextField(blank=True, null=True)),
                ('currency', models.CharField(default='GHS', max_length=67)),
                ('price', models.CharField(max_length=10)),
                ('paystack_reference', models.CharField(blank=True, max_length=256, null=True)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_org', to='accounts.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billings.profile')),
                ('user_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='billings.userprofile')),
            ],
            options={
                'ordering': ['-trans_end'],
            },
        ),
    ]
